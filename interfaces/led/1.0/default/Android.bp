// FIXME: your file license if you have one

cc_binary {
    // FIXME: this should only be -impl for a passthrough hal.
    // In most cases, to convert this to a binderized implementation, you should:
    // - change '-impl' to '-service' here and make it a cc_binary instead of a
    //   cc_library_shared.
    // - add a *.rc file for this module.
    // - delete HIDL_FETCH_I* functions.
    // - call configureRpcThreadpool and registerAsService on the instance.
    // You may also want to append '-impl/-service' with a specific identifier like
    // '-vendor' or '-<hardware identifier>' etc to distinguish it.
    name: "my_demo.hardware.led@1.0-service",
    relative_install_path: "hw",
    defaults: ["hidl_defaults"],
    vendor: true,
    init_rc: ["my_demo.hardware.led@1.0-service.rc"],
    srcs: [
        "Led.cpp",
        "service.cpp",
    ],
    shared_libs: [
        "libhidlbase",
        "libhidltransport",
        "libutils",
        "liblog",
        "my_demo.hardware.led@1.0",
    ],
}
